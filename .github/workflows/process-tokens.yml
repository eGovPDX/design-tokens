name: Process Design Tokens

on:
  pull_request:
    paths:
      - 'design-tokens.json'
  push:
    branches:
      - main
    paths:
      - 'design-tokens.json'

jobs:
  process-tokens:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name 'Design Tokens Bot'
          git config --global user.email 'design-tokens-bot@portland.gov'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.19.1'  # Latest LTS version
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Create output directory
        run: mkdir -p output

      - name: Process tokens
        id: process-tokens
        env:
          FIGMA_ACCESS_TOKEN: ${{ secrets.FIGMA_ACCESS_TOKEN }}
          # SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          echo "::group::Processing Tokens"
          
          # Check if design-tokens.json exists
          if [ ! -f design-tokens.json ]; then
            echo "::error::design-tokens.json not found"
            exit 1
          fi
          
          # Create a backup of the original tokens
          cp design-tokens.json design-tokens.backup.json
          
          # Process tokens and capture any changes
          if ! node src/cli.js --source file --input design-tokens.json --output output > token-changes.log 2>&1; then
            echo "::error::Token processing failed"
            cat token-changes.log
            exit 1
          fi
          
          # Compare files to detect changes
          if ! cmp -s design-tokens.json design-tokens.backup.json; then
            echo "TOKENS_CHANGED=true" >> $GITHUB_ENV
            echo "::notice::Tokens were processed and modified"
            
            # Generate a diff for the PR comment
            git diff --no-index design-tokens.backup.json design-tokens.json > token-diff.patch || true
          else
            echo "TOKENS_CHANGED=false" >> $GITHUB_ENV
            echo "::notice::No changes were needed in the tokens"
          fi
          echo "::endgroup::"

      - name: Fetch and merge main
        if: github.event_name == 'pull_request' && env.TOKENS_CHANGED == 'true'
        run: |
          echo "::group::Fetching and merging main"
          git fetch origin main
          git merge origin/main --no-edit
          echo "::endgroup::"

      - name: Update Pull Request
        if: github.event_name == 'pull_request' && env.TOKENS_CHANGED == 'true'
        run: |
          echo "::group::Updating Pull Request"
          
          # Stage and commit changes
          git add design-tokens.json output/
          git commit -m "chore: process design tokens
          
          Automated token processing via GitHub Actions.
          This commit updates the processed token files based on changes in design-tokens.json."
          
          # Push changes back to the PR branch
          git push origin HEAD
          
          # Add PR comment with changes
          if [ -f token-diff.patch ]; then
            PR_COMMENT="## Design Token Changes

            The following changes were made to the design tokens:
            
            \`\`\`diff
            $(cat token-diff.patch)
            \`\`\`
            
            These changes have been automatically processed and committed."
            
            gh pr comment ${{ github.event.pull_request.number }} --body "$PR_COMMENT"
          fi
          echo "::endgroup::"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changes to main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && env.TOKENS_CHANGED == 'true'
        run: |
          echo "::group::Pushing to main"
          git push origin HEAD
          echo "::endgroup::"

      # - name: Notify on failure
      #   if: failure()
      #   run: |
      #     curl -X POST -H 'Content-type: application/json' \
      #       --data '{"text":"‚ùå Failed to process design tokens\nWorkflow: ${{ github.workflow }}\nRun: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' \
      #       ${{ secrets.SLACK_WEBHOOK_URL }}
